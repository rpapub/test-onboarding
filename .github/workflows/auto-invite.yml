name: Auto-Invite New Member
on:
  issues:
    types: [opened]

jobs:
  invite:
    runs-on: ubuntu-latest
    steps:
      - name: Check if issue is valid onboarding request
        id: check
        run: |
          BODY="${{ github.event.issue.body }}"
          if echo "$BODY" | grep -q "GitHub Username" && echo "$BODY" | grep -q "I agree to follow"; then
            echo "valid_request=true" >> $GITHUB_ENV
          else
            echo "valid_request=false" >> $GITHUB_ENV
          fi

      - name: Extract username
        if: env.valid_request == 'true'
        id: extract
        run: |
          echo "Extracting GitHub Username from issue body..."
          BODY="${{ github.event.issue.body }}"
          USERNAME=$(echo "$BODY" | awk '/### GitHub Username/ {flag=1; next} flag && NF {print; exit}' | xargs)

          if [ -z "$USERNAME" ]; then
            echo "❌ No username found. Exiting."
            exit 1
          fi

          echo "Extracted username: $USERNAME"
          echo "USERNAME=$USERNAME" >> $GITHUB_ENV
          echo "username=$USERNAME" >> $GITHUB_OUTPUT

      - name: Lookup GitHub user ID
        if: env.valid_request == 'true'
        id: lookup
        run: |
          echo "Looking up GitHub ID for user: ${{ env.USERNAME }}"
          RESPONSE=$(curl -s -H "Authorization: Bearer ${{ secrets.ORG_RPAPUB_ADMIN_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/users/${{ env.USERNAME }})

          USER_ID=$(echo "$RESPONSE" | jq '.id // empty')

          if [ -z "$USER_ID" ]; then
            echo "❌ GitHub user not found. Exiting."
            exit 1
          fi

          echo "Resolved USER_ID: $USER_ID"
          echo "USER_ID=$USER_ID" >> $GITHUB_ENV
          echo "user_id=$USER_ID" >> $GITHUB_OUTPUT

      - name: Check if user already a member
        if: env.valid_request == 'true'
        id: check_member
        run: |
          IS_MEMBER=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer ${{ secrets.ORG_RPAPUB_ADMIN_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/orgs/rpapub/members/${{ env.USERNAME }})

          if [ "$IS_MEMBER" -eq 204 ]; then
            echo "✅ User already a member, skipping invite."
            echo "already_member=true" >> $GITHUB_ENV
          else
            echo "Inviting USER_ID=${{ env.USER_ID }} to organization."
            curl -X POST \
              -H "Authorization: Bearer ${{ secrets.ORG_RPAPUB_ADMIN_PAT }}" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/orgs/rpapub/invitations \
              -d "{\"invitee_id\": ${{ env.USER_ID }}}"
            echo "already_member=false" >> $GITHUB_ENV
          fi

      - name: Comment back on issue
        if: env.valid_request == 'true'
        run: |
          if [ "${{ env.already_member }}" == "true" ]; then
            COMMENT_BODY="✅ @${{ env.USERNAME }} is already a member of the organization!"
          else
            COMMENT_BODY="🎉 Invitation sent to @${{ env.USERNAME }}! Please accept it to join the organization!"
          fi

          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.ORG_RPAPUB_ADMIN_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }}/comments \
            -d "{\"body\":\"$COMMENT_BODY\"}"

      - name: Close the issue
        if: env.valid_request == 'true'
        run: |
          echo "Closing the issue..."
          curl -X PATCH \
            -H "Authorization: Bearer ${{ secrets.ORG_RPAPUB_ADMIN_PAT }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
            -d '{"state":"closed"}'
